# Receivers: Collector가 트레이스 데이터를 수신하는 방식 정의
receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

# Processors: 수신된 데이터를 처리하는 단계 정의
processors:
  # 배치 처리를 통한 성능 최적화
  batch:
    timeout: 1s
    send_batch_size: 1024
    send_batch_max_size: 2048

  tail_sampling:
    decision_wait: 5s # 트레이스 완료를 기다리는 최대 시간 (트레이스가 완전히 수신될 때까지 대기)
    num_traces: 100000 # 동시에 처리할 수 있는 최대 트레이스 수
    expected_new_traces_per_sec: 1000 # 초당 예상되는 새로운 트레이스 수
    policies:
      # 정책 1: 오류가 발생한 트레이스는 무조건 샘플링 (가장 높은 우선순위)
      - name: always-sample-on-error
        type: status_code
        status_code:
          status_codes: [ERROR, UNSET] # ERROR 또는 UNSET 상태 코드인 스팬이 있으면 샘플링

      # 정책 2: 오류가 없는 트레이스는 확률적으로 샘플링 (낮은 우선순위)
      - name: probabilistic-sample-10-percent
        type: probabilistic
        probabilistic:
          sampling_percentage: 10 # 10%만 샘플링

# Exporters: 처리된 데이터를 외부 시스템으로 내보내는 방식 정의
exporters:
  # Grafana Tempo로 OTLP gRPC 프로토콜을 사용하여 내보내기
  otlp/tempo:
    endpoint: tempo:9095
    tls:
      insecure: true

  # Grafana Loki로 OTLP HTTP 프로토콜을 사용하여 로그 전송
  otlphttp:
    endpoint: http://loki:3100/loki/api/v1/push

  # 디버그 출력 (테스트용)
  debug:
    verbosity: basic
  # 파일로 출력 (테스트용)
  file:
    path: /logs/otel-data.json

service:
  pipelines:
    traces:
      receivers: [otlp]
      processors: [tail_sampling] # tail_sampling 프로세서 적용
      exporters: [otlp/tempo] # OTLP gRPC 익스포터를 통해 Tempo로 전송
    
    # 메트릭 파이프라인 추가
    metrics:
      receivers: [otlp]
      exporters: [file] # 파일로 출력
    
    # 로그 파이프라인 추가
    logs:
      receivers: [otlp]
      processors: [batch]
      exporters: [otlphttp, file, debug] # Loki, 파일, 디버그 출력으로 로그 전송