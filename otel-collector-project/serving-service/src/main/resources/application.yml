spring:
  application:
    name: serving-service

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/

# Micrometer OTLP 설정  
management:
  otlp:
    tracing:
      endpoint: http://localhost:4318/v1/traces  # HTTP endpoint
      export:
        enabled: true
    metrics:
      export:
        enabled: false # logging 테스트를 위해 잠시 주석처리해둠
        url: http://localhost:4318/v1/metrics
        step: 10s
    logging:
      export:
        enabled: true
      endpoint: http://localhost:4318/v1/logs
  tracing:
    sampling:
      probability: 1.0  # 100% 트레이스 수집 (개발환경)
    # 트레이스 전파 설정 (RestTemplate, WebClient 등에 자동 적용)
    enabled: true

  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus


logging:
  level:
    root: info
    org.springframework.boot: info
    com.example: debug  # com.example 패키지에 대해 debug 로그 활성화
    io.opentelemetry.instrumentation.logback.appender.v1_0 : trace
  #pattern:
    #level: '%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - [%X{traceId}/%X{spanId}] %msg%n'       # 파일이나 WARN, ERROR 을 설정하는 프로퍼티 이다. file.path 또는 file.name을 설정하지 않으면 어디로 출력해야 할지 모름으로 -> console로 보냄으로 콘솔에 두가지 패턴의 로그기 찍힌다.
    #console: "%d{yyyy-MM-dd HH:mm:ss.SSS} %clr(%-5level) %clr([${spring.application.name:-}]){yellow} %clr([%15.15t]){faint} %clr([%X{traceId:-},%X{spanId:-}]){magenta} %clr(%-40.40logger{39}){cyan} : %msg%n"

